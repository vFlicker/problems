/*
  Дано масив n x n, поверніть елементи масиву, розташовані
  від крайніх елементів до середнього елемента, рухаючись
  за годинниковою стрілкою.
*/

/**
 * Складність за часом — `О(n * m)`, де n і m — розмір старої матриці
 * Складність за пам'яттю — `О(n * m)`
 */
const snail = (matrix) => {
  const vector = [];

  while (matrix.length > 0) {
    // Додати верхній ряд матриці до результату
    vector.push(...matrix.shift());

    // Додати правий стовпець матриці до результату
    for (let i = 0; i < matrix.length; i++) {
      vector.push(matrix[i].pop());
    }

    // Додати нижній ряд матриці (зворотний порядок) до результату
    if (matrix.length > 0) {
      vector.push(...matrix.pop().reverse());
    }

    // Додати лівий стовпець матриці (зворотний порядок) до результату
    for (let i = matrix.length - 1; i >= 0; i--) {
      vector.push(matrix[i].shift());
    }
  }

  return vector;
};

console.log(snail([
  [1, 2, 3],
  [8, 9, 4],
  [7, 6, 5],
])); // [1, 2, 3, 4, 5, 6, 7, 8, 9]
